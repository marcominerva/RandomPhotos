//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RandomPhotos.Resources.Pages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Index {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Index() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RandomPhotos.Resources.Pages.Index", typeof(Index).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API Key is stored in the client browser only. It is never saved on the server and it is only used to invoke ChatGPT service..
        /// </summary>
        public static string ApiKeyTooltip {
            get {
                return ResourceManager.GetString("ApiKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translate text using AI.
        /// </summary>
        public static string ApplicationDescription {
            get {
                return ResourceManager.GetString("ApplicationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure.
        /// </summary>
        public static string AzureProvider {
            get {
                return ResourceManager.GetString("AzureProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copied!.
        /// </summary>
        public static string Copied {
            get {
                return ResourceManager.GetString("Copied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy to Clipboard.
        /// </summary>
        public static string CopyToClipboard {
            get {
                return ResourceManager.GetString("CopyToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert API Key....
        /// </summary>
        public static string InsertApiKey {
            get {
                return ResourceManager.GetString("InsertApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional) Insert context information that can help the translation (for example, &quot;this text is talking about software development&quot;, &quot;the text contains legal terms&quot;, etc.)....
        /// </summary>
        public static string InsertContextInformation {
            get {
                return ResourceManager.GetString("InsertContextInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert the model name....
        /// </summary>
        public static string InsertModelName {
            get {
                return ResourceManager.GetString("InsertModelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert Resource name....
        /// </summary>
        public static string InsertResourceName {
            get {
                return ResourceManager.GetString("InsertResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert your text here....
        /// </summary>
        public static string InsertText {
            get {
                return ResourceManager.GetString("InsertText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the &lt;a href=&quot;#&quot; data-bs-toggle=&quot;modal&quot; data-bs-target=&quot;#settings&quot;&gt;Settings&lt;/a&gt; dialog to set the API Key and the other requested configurations for ChatGPT.
        /// </summary>
        public static string InvalidSettingsErrorMessage {
            get {
                return ResourceManager.GetString("InvalidSettingsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The model to use for ChatGPT. If you&apos;re using OpenAI, allowed values are: gpt-3.5-turbo, gpt-4 or gpt-4-32k. If you&apos;re working with Azure OpenAI service, model name must match the deployment name you have created in the Azure AI Studio..
        /// </summary>
        public static string ModelNameTooltip {
            get {
                return ResourceManager.GetString("ModelNameTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenAI.
        /// </summary>
        public static string OpenAIProvider {
            get {
                return ResourceManager.GetString("OpenAIProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider.
        /// </summary>
        public static string Provider {
            get {
                return ResourceManager.GetString("Provider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the Azure OpenAI Resource that contains the ChatGPT model..
        /// </summary>
        public static string ResourceNameTooltip {
            get {
                return ResourceManager.GetString("ResourceNameTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the target language.
        /// </summary>
        public static string SelectTargetLanguage {
            get {
                return ResourceManager.GetString("SelectTargetLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
    }
}
